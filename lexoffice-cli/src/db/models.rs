// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]
use std::time::SystemTime;

use diesel::prelude::*;

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(contactid))]
#[diesel(table_name = crate::db::schema::addresses)]
pub struct Addresse {
    pub contactid: String,
    pub name: Option<String>,
    pub supplement: Option<String>,
    pub street: Option<String>,
    pub city: Option<String>,
    pub zip: Option<String>,
    pub countrycode: Option<String>,
}

#[derive(Queryable, Selectable, Insertable, Debug)]
#[diesel(table_name = crate::db::schema::invoices)]
#[diesel(check_for_backend(diesel::pg::Pg))]
pub struct Invoice {
    pub id: String,
    pub organizationid: Option<String>,
    pub createddate: Option<SystemTime>,
    pub updateddate: Option<SystemTime>,
    pub version: Option<i32>,
    pub language: Option<String>,
    pub archived: Option<bool>,
    pub voucherstatus: Option<String>,
    pub vouchernumber: Option<String>,
    pub voucherdate: Option<SystemTime>,
    pub duedate: Option<SystemTime>,
    pub address_id: Option<String>,
    pub address_name: Option<String>,
    pub address_supplement: Option<String>,
    pub address_street: Option<String>,
    pub address_city: Option<String>,
    pub address_zip: Option<String>,
    pub address_countrycode: Option<String>,
}

#[derive(Queryable, Selectable, Debug)]
#[diesel(table_name = crate::db::schema::line_items)]
#[diesel(check_for_backend(diesel::pg::Pg))]
pub struct LineItem {
    pub id: i32,
    pub product_id: Option<String>,
    pub voucher_id: Option<String>,
    pub quantity: Option<i32>,
    pub unit_name: Option<String>,
    pub currency: Option<String>,
    pub net_amount: Option<f64>,
    pub gross_amount: Option<f64>,
    pub tax_rate_percentage: Option<i32>,
}

#[derive(Queryable, Selectable, Debug)]
#[diesel(table_name = crate::db::schema::products)]
pub struct Product {
    pub id: String,
    pub type_: Option<String>,
    pub name: Option<String>,
    pub description: Option<String>,
}

#[derive(Queryable, Selectable, Debug)]
#[diesel(table_name = crate::db::schema::vouchers)]
pub struct Voucher {
    pub id: String,
    pub vouchertype: Option<String>,
    pub voucherstatus: Option<String>,
    pub vouchernumber: Option<String>,
    pub voucherdate: Option<SystemTime>,
    pub createddate: Option<SystemTime>,
    pub updateddate: Option<SystemTime>,
    pub duedate: Option<SystemTime>,
    pub contactid: Option<String>,
    pub contactname: Option<String>,
    pub totalamount: Option<f64>,
    pub openamount: Option<f64>,
    pub currency: Option<String>,
    pub archived: Option<bool>,
}
