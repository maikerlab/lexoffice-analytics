/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct VoucherList {
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Vec<crate::models::Voucher>>,
    #[serde(rename = "first", skip_serializing_if = "Option::is_none")]
    pub first: Option<bool>,
    #[serde(rename = "last", skip_serializing_if = "Option::is_none")]
    pub last: Option<bool>,
    #[serde(rename = "totalPages", skip_serializing_if = "Option::is_none")]
    pub total_pages: Option<i32>,
    #[serde(rename = "totalElements", skip_serializing_if = "Option::is_none")]
    pub total_elements: Option<i32>,
    #[serde(rename = "numberOfElements", skip_serializing_if = "Option::is_none")]
    pub number_of_elements: Option<i32>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    #[serde(rename = "number", skip_serializing_if = "Option::is_none")]
    pub number: Option<i32>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<Vec<crate::models::SortProperties>>,
}

impl VoucherList {
    pub fn new() -> VoucherList {
        VoucherList {
            content: None,
            first: None,
            last: None,
            total_pages: None,
            total_elements: None,
            number_of_elements: None,
            size: None,
            number: None,
            sort: None,
        }
    }
}


